version: '3.8'


x-kafka-controller-base: &kafka-controller-base
  image: apache/kafka:3.8.1
  restart: on-failure
  command:
    - /bin/sh
    - -c
    - |
      echo '
      log4j.rootLogger=INFO, stdout, kafkaAppender
      log4j.appender.stdout=org.apache.log4j.ConsoleAppender
      log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
      log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
      log4j.appender.kafkaAppender=org.apache.log4j.RollingFileAppender
      log4j.appender.kafkaAppender.File=/opt/kafka/logs/kafka.log
      log4j.appender.kafkaAppender.MaxFileSize=10MB
      log4j.appender.kafkaAppender.MaxBackupIndex=10
      log4j.appender.kafkaAppender.layout=org.apache.log4j.PatternLayout
      log4j.appender.kafkaAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
      ' > /tmp/log4j.properties
      /etc/kafka/docker/run
  volumes:
    - ./volumes/jmx_exporter:/usr/share/jmx_exporter
  networks:
    - billion

x-spark-common: &spark-common
  image: bitnami/spark:3.5.0
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs
    - ./mnt/checkpoint:/mnt/spark-checkpoints
    - ./mnt/spark-state:/mnt/spark-state
  networks:
    - billion


services:
  kafka-controller-1:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://kafka-controller-1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    networks:
      - billion
    volumes:
      - controller_data_1:/var/lib/kafka/data

  kafka-controller-2:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://kafka-controller-2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    networks:
      - billion
    volumes:
      - controller_data_2:/var/lib/kafka/data

  kafka-controller-3:
    image: apache/kafka:3.8.1
    container_name: kafka-controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://kafka-controller-3:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    networks:
      - billion
    volumes:
      - controller_data_3:/var/lib/kafka/data

  kafka-broker-1:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-1
    ports:
      - "29092:9092"
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    volumes:
      - broker_data_1:/var/lib/kafka/data
    networks:
      - billion


  kafka-broker-2:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-2
    ports:
      - "39092:9092"
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-2:19092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:19092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    volumes:
      - broker_data_2:/var/lib/kafka/data
    networks:
      - billion

  kafka-broker-3:
    image: apache/kafka:3.8.1
    container_name: kafka-broker-3
    ports:
      - "49092:9092"
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-3:19092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:19092,PLAINTEXT_HOST://localhost:49092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller-1:9093,2@kafka-controller-2:9093,3@kafka-controller-3:9093
    depends_on:
      - kafka-controller-1
      - kafka-controller-2
      - kafka-controller-3
    volumes:
      - broker_data_3:/var/lib/kafka/data
    networks:
      - billion

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    container_name: schema-registry
    ports:
      - "18081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-broker-1:19092,kafka-broker-2:19092,kafka-broker-3:19092
      SCHEMA_REGISTRY_KAFKASTORE_TOPICS: _schemas
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18081
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    networks:
      - billion
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18081/subjects"]
      interval: 10s
      timeout: 5s
      retries: 5

  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    container_name: console
    entrypoint: /bin/sh
    command: |-
      -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - "8080:8080"
    depends_on:
      schema-registry:
        condition: service_healthy
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: >
        kafka:
          brokers: ["kafka-broker-1:19092", "kafka-broker-2:19092", "kafka-broker-3:19092"]
          schemaRegistry:
            enabled: true
            urls: ["http://schema-registry:18081"]
    networks:
      - billion



  spark-master:
    container_name: spark-master
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9190:8080"
      - "7077:7077"
      - "4040:4040"
      - "8081:8081"
  
  spark-worker: &spark-worker-image
    container_name: spark-worker-1
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on: 
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://spark-master:7077
  
  spark-worker-2:
    container_name: spark-worker-2
    <<: *spark-worker-image

  spark-worker-3:
    container_name: spark-worker-3
    <<: *spark-worker-image

  prometheus:
    image: prom/prometheus:v3.0.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    networks:
      - billion

  alertmanager:
    image: prom/alertmanager:v0.27.0
    ports:
      - "59093:9093"
    networks:
      - billion

volumes:
  controller_data_1:
  controller_data_2:
  controller_data_3:
  broker_data_1:
  broker_data_2:
  broker_data_3:

networks:
  billion:
